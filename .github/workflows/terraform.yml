name: 'Terraform AWS Workflow'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform AWS'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless of the runner OS
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Setup Terraform CLI and configure it with the Terraform Cloud API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Configure AWS credentials from GitHub secrets (you need to add these secrets to your repository)
    - name: Configure AWS Credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_ENV

    # Initialize the Terraform working directory and configure AWS backend (if using a backend)
    - name: Terraform Init
      run: terraform init

    # Check if the Terraform files are properly formatted
    - name: Terraform Format
      run: terraform fmt -check

    # Generate a Terraform execution plan
    - name: Terraform Plan
      run: terraform plan -input=false

    # Apply the changes to the AWS infrastructure on push to the "main" branch
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
